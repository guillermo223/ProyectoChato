package com.proyecto.quental.chat.model.impl;

import com.liferay.portal.NoSuchModelException;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.trash.TrashHandler;
import com.liferay.portal.kernel.trash.TrashHandlerRegistryUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.Validator;
import com.liferay.portal.kernel.workflow.WorkflowConstants;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.ContainerModel;
import com.liferay.portal.model.TrashedModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.trash.model.TrashEntry;
import com.liferay.portlet.trash.service.TrashEntryLocalServiceUtil;

import com.proyecto.quental.chat.model.Asignacion;
import com.proyecto.quental.chat.model.AsignacionModel;
import com.proyecto.quental.chat.model.AsignacionSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Asignacion service. Represents a row in the &quot;Asignacion&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.proyecto.quental.chat.model.AsignacionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AsignacionImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AsignacionImpl
 * @see com.proyecto.quental.chat.model.Asignacion
 * @see com.proyecto.quental.chat.model.AsignacionModel
 * @generated
 */
@JSON(strict = true)
public class AsignacionModelImpl extends BaseModelImpl<Asignacion>
    implements AsignacionModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a asignacion model instance should use the {@link com.proyecto.quental.chat.model.Asignacion} interface instead.
     */
    public static final String TABLE_NAME = "Asignacion";
    public static final Object[][] TABLE_COLUMNS = {
            { "asignacionId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "conversacionId", Types.BIGINT }
        };
    public static final String TABLE_SQL_CREATE = "create table Asignacion (asignacionId LONG not null primary key,userId LONG,conversacionId LONG)";
    public static final String TABLE_SQL_DROP = "drop table Asignacion";
    public static final String ORDER_BY_JPQL = " ORDER BY asignacion.asignacionId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY Asignacion.asignacionId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.proyecto.quental.chat.model.Asignacion"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.proyecto.quental.chat.model.Asignacion"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.proyecto.quental.chat.model.Asignacion"),
            true);
    public static long CONVERSACIONID_COLUMN_BITMASK = 1L;
    public static long USERID_COLUMN_BITMASK = 2L;
    public static long ASIGNACIONID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.proyecto.quental.chat.model.Asignacion"));
    private static ClassLoader _classLoader = Asignacion.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Asignacion.class
        };
    private long _asignacionId;
    private long _userId;
    private String _userUuid;
    private long _originalUserId;
    private boolean _setOriginalUserId;
    private long _conversacionId;
    private long _originalConversacionId;
    private boolean _setOriginalConversacionId;
    private long _columnBitmask;
    private Asignacion _escapedModel;

    public AsignacionModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Asignacion toModel(AsignacionSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Asignacion model = new AsignacionImpl();

        model.setAsignacionId(soapModel.getAsignacionId());
        model.setUserId(soapModel.getUserId());
        model.setConversacionId(soapModel.getConversacionId());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Asignacion> toModels(AsignacionSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Asignacion> models = new ArrayList<Asignacion>(soapModels.length);

        for (AsignacionSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _asignacionId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setAsignacionId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _asignacionId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Asignacion.class;
    }

    @Override
    public String getModelClassName() {
        return Asignacion.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("asignacionId", getAsignacionId());
        attributes.put("userId", getUserId());
        attributes.put("conversacionId", getConversacionId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long asignacionId = (Long) attributes.get("asignacionId");

        if (asignacionId != null) {
            setAsignacionId(asignacionId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Long conversacionId = (Long) attributes.get("conversacionId");

        if (conversacionId != null) {
            setConversacionId(conversacionId);
        }
    }

    @JSON
    @Override
    public long getAsignacionId() {
        return _asignacionId;
    }

    @Override
    public void setAsignacionId(long asignacionId) {
        _asignacionId = asignacionId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _columnBitmask |= USERID_COLUMN_BITMASK;

        if (!_setOriginalUserId) {
            _setOriginalUserId = true;

            _originalUserId = _userId;
        }

        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    public long getOriginalUserId() {
        return _originalUserId;
    }

    @JSON
    @Override
    public long getConversacionId() {
        return _conversacionId;
    }

    @Override
    public void setConversacionId(long conversacionId) {
        _columnBitmask |= CONVERSACIONID_COLUMN_BITMASK;

        if (!_setOriginalConversacionId) {
            _setOriginalConversacionId = true;

            _originalConversacionId = _conversacionId;
        }

        _conversacionId = conversacionId;
    }

    public long getOriginalConversacionId() {
        return _originalConversacionId;
    }

    @Override
    public int getStatus() {
        return 0;
    }

    @Override
    public TrashEntry getTrashEntry() throws PortalException, SystemException {
        if (!isInTrash()) {
            return null;
        }

        TrashEntry trashEntry = TrashEntryLocalServiceUtil.fetchEntry(getModelClassName(),
                getTrashEntryClassPK());

        if (trashEntry != null) {
            return trashEntry;
        }

        TrashHandler trashHandler = getTrashHandler();

        if (!Validator.isNull(trashHandler.getContainerModelClassName())) {
            ContainerModel containerModel = null;

            try {
                containerModel = trashHandler.getParentContainerModel(this);
            } catch (NoSuchModelException nsme) {
                return null;
            }

            while (containerModel != null) {
                if (containerModel instanceof TrashedModel) {
                    TrashedModel trashedModel = (TrashedModel) containerModel;

                    return trashedModel.getTrashEntry();
                }

                trashHandler = TrashHandlerRegistryUtil.getTrashHandler(trashHandler.getContainerModelClassName());

                if (trashHandler == null) {
                    return null;
                }

                containerModel = trashHandler.getContainerModel(containerModel.getParentContainerModelId());
            }
        }

        return null;
    }

    @Override
    public long getTrashEntryClassPK() {
        return getPrimaryKey();
    }

    @Override
    public TrashHandler getTrashHandler() {
        return TrashHandlerRegistryUtil.getTrashHandler(getModelClassName());
    }

    @Override
    public boolean isInTrash() {
        if (getStatus() == WorkflowConstants.STATUS_IN_TRASH) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public boolean isInTrashContainer() {
        TrashHandler trashHandler = getTrashHandler();

        if ((trashHandler == null) ||
                Validator.isNull(trashHandler.getContainerModelClassName())) {
            return false;
        }

        try {
            ContainerModel containerModel = trashHandler.getParentContainerModel(this);

            if (containerModel == null) {
                return false;
            }

            if (containerModel instanceof TrashedModel) {
                return ((TrashedModel) containerModel).isInTrash();
            }
        } catch (Exception e) {
        }

        return false;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
            Asignacion.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Asignacion toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Asignacion) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AsignacionImpl asignacionImpl = new AsignacionImpl();

        asignacionImpl.setAsignacionId(getAsignacionId());
        asignacionImpl.setUserId(getUserId());
        asignacionImpl.setConversacionId(getConversacionId());

        asignacionImpl.resetOriginalValues();

        return asignacionImpl;
    }

    @Override
    public int compareTo(Asignacion asignacion) {
        long primaryKey = asignacion.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Asignacion)) {
            return false;
        }

        Asignacion asignacion = (Asignacion) obj;

        long primaryKey = asignacion.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        AsignacionModelImpl asignacionModelImpl = this;

        asignacionModelImpl._originalUserId = asignacionModelImpl._userId;

        asignacionModelImpl._setOriginalUserId = false;

        asignacionModelImpl._originalConversacionId = asignacionModelImpl._conversacionId;

        asignacionModelImpl._setOriginalConversacionId = false;

        asignacionModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Asignacion> toCacheModel() {
        AsignacionCacheModel asignacionCacheModel = new AsignacionCacheModel();

        asignacionCacheModel.asignacionId = getAsignacionId();

        asignacionCacheModel.userId = getUserId();

        asignacionCacheModel.conversacionId = getConversacionId();

        return asignacionCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{asignacionId=");
        sb.append(getAsignacionId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", conversacionId=");
        sb.append(getConversacionId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("com.proyecto.quental.chat.model.Asignacion");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>asignacionId</column-name><column-value><![CDATA[");
        sb.append(getAsignacionId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>conversacionId</column-name><column-value><![CDATA[");
        sb.append(getConversacionId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
